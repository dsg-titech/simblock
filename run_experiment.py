from subprocess import check_output

download_partition = ["{25000000, 0, 0, 0, 0, 0, 0}", "{0, 40000000, 18000000, 22800000, 22800000, 29900000}", "{0, 18000000, 18000000, 18000000, 18000000, 18000000}", "{0, 22800000, 18000000, 22800000, 22800000, 22800000}", "{0, 22800000, 18000000, 22800000, 22800000, 22800000}", "{0, 29900000, 18000000, 22800000, 22800000, 29900000}"]

upload_partition = ["{19200000, 0, 0, 0, 0, 0, 0}", "{0, 20700000, 5800000, 15700000, 10200000, 11300000}", "{0, 5800000, 5800000, 5800000, 5800000, 5800000}", "{0, 15700000, 5800000, 15700000, 10200000, 11300000}", "{0, 10200000, 5800000, 10200000, 10200000, 10200000}", "{0, 11300000, 5800000, 11300000, 10200000, 11300000}"]

def download_with_value():
    return ["{{25000000, {0}, {0}, {0}, {0}, {0}, {0}}}", "{{0, 40000000, 18000000, 22800000, 22800000, 29900000}}", "{{{0}, 18000000, 18000000, 18000000, 18000000, 18000000}}", "{{{0}, 22800000, 18000000, 22800000, 22800000, 22800000}}", "{{{0}, 22800000, 18000000, 22800000, 22800000, 22800000}}", "{{{0}, 29900000, 18000000, 22800000, 22800000, 29900000}}"]


def upload_with_value():
    return ["{{19200000, {0}, {0}, {0}, {0}, {0}, {0}}}", "{{{0}, 20700000, 5800000, 15700000, 10200000, 11300000}}", "{{{0}, 5800000, 5800000, 5800000, 5800000, 5800000}}", "{{{0}, 15700000, 5800000, 15700000, 10200000, 11300000}}", "{{{0}, 10200000, 5800000, 10200000, 10200000, 10200000}}", "{{{0}, 11300000, 5800000, 11300000, 10200000, 11300000}}"]


with open('D:\\simblock\\simulator\\src\\main\\java\\simblock\\settings\\NetworkConfiguration.java', 'r') as f:
    settings = f.read()

for i, l in enumerate(download_with_value()):
    settings = settings.replace(l.format(100000), l.format(10000000))

for i, l in enumerate(upload_with_value()):
    settings = settings.replace(l.format(100000), l.format(10000000))

with open('D:\\simblock\\simulator\\src\\main\\java\\simblock\\settings\\NetworkConfiguration.java', 'w') as f:
    f.write(settings)

out = check_output("gradlew.bat :simulator:run", shell=True).decode()
for line in out.split('\n'):
    if line.startswith("Number of detected forks:"):
        print(line)
